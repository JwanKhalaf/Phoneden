@using Phoneden.ViewModels
@model Phoneden.ViewModels.CustomerSalesReportViewModel

@{
  ViewBag.Title = "Customer Orders";
}

<div class="page-title">
  <h3>Customer Settled Orders</h3>
</div>

<div class="row">
  <div class="col-md-12">
    <div class="grid simple">
      <div class="grid-body no-border">
        <br>
        <div class="row">
          <div class="col-md-12">
            <h3 class="all-caps">
              <span class="semi-bold">Filter</span> Results
            </h3>
            <hr />
          </div>
        </div>

        <form asp-controller="Report" asp-action="CustomerSales" method="post" role="form">
          <div asp-validation-summary="All" class="text-danger"></div>
          <div class="row">
            <div class="col-md-4">
              <div class="form-group">
                <label asp-for="CustomerId" class="form-label"></label>
                <div class="controls">
                  <select asp-for="CustomerId"
                          asp-items="@(new SelectList(Model.Customers, "Value", "Text"))"
                          class="form-control customer-select">
                    <option>Select a Customer</option>
                  </select>
                  <span asp-validation-for="CustomerId" class="text-danger"></span>
                </div>
              </div>
            </div>

            <div class="col-md-4">
              <div class="form-group">
                <label asp-for="StartDate" class="form-label"></label>
                <div class="controls">
                  <input asp-for="StartDate" class="form-control" />
                  <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>
              </div>
            </div>
            <div class="col-md-4">
              <div class="form-group">
                <label asp-for="EndDate" class="form-label"></label>
                <div class="controls">
                  <input asp-for="EndDate" class="form-control" />
                  <span asp-validation-for="EndDate" class="text-danger"></span>
                </div>
              </div>
            </div>
            <div class="col-md-12">
              <button type="submit" class="btn btn-primary pull-right filter">Update Results</button>
              <a asp-controller="Report" asp-action="CustomerSales" class="btn btn-default pull-right">Reset</a>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

  <div class="col-md-8">
    <div class="grid simple">
      <div class="grid-body no-border">
        <table class="table table-striped table-flip-scroll cf">
          <thead class="cf">
            <tr>
              <th>
                Order Date
              </th>

              <th>
                Invoice Id
              </th>

              <th>
                Customer
              </th>

              <th>
                Invoiced Total
              </th>

              <th>
                Order Profit
              </th>
            </tr>
          </thead>
          <tbody>
            @if (Model.SettledSaleOrders != null && Model.SettledSaleOrders.Any())
            {
              foreach (CustomerSalesItemReportViewModel item in Model.SettledSaleOrders)
              {
                <tr>
                  <td>
                    @string.Format("{0:dd MMM yyyy}", item.SaleOrderDate)
                  </td>

                  <td>
                    @item.InvoiceId
                  </td>

                  <td>
                    <a asp-controller="Customer" asp-action="Details" asp-route-id="@item.CustomerId">@item.CustomerName</a>
                  </td>

                  <td>
                    @item.InvoiceTotal.ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))
                  </td>

                  <td>
                    @item.Profit.ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))
                  </td>
                </tr>
              }
            }
            else
            {
              <tr>
                <td colspan="7">
                  <div class="alert alert-warning">
                    <p>There are no sale orders for the dates specified</p>
                  </div>
                </td>
              </tr>
            }
          </tbody>
        </table>
        @if (Model.Pagination != null)
        {
          <cs-pager cs-paging-pagesize="10"
                    cs-paging-pagenumber="@Model.Pagination.CurrentPage"
                    cs-paging-totalitems="@Model.Pagination.TotalRecords"
                    cs-pagenumber-param="page"
                    asp-controller="Report"
                    asp-action="CustomerSales">
          </cs-pager>
          <input asp-for="Pagination.CurrentPage" type="hidden" />
        }

        <table class="table">
          <tr>
            <td><h3 class="all-caps"><strong>Total Sales</strong></h3></td>
            <td>
              <h3>
                @Model.TotalSales.ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))
              </h3>
            </td>
          </tr>

          <tr>
            <td><h3 class="all-caps"><strong>Total Profit</strong></h3></td>
            <td>
              <h3>
                @Model.TotalProfit.ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))
              </h3>
            </td>
          </tr>

          <tr>
            <td><h3 class="all-caps"><strong>Total Profit After Expenses</strong></h3></td>
            <td>
              <h3>
                @Model.TotalProfitAfterExpenses.ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))
              </h3>
            </td>
          </tr>
        </table>
      </div>
    </div>
  </div>

  <div class="col-md-4">
    <canvas id="my-chart" width="400" height="400"></canvas>
  </div>
</div>

@section Scripts {
  <script src="~/lib/chartjs/chart.bundle.min.js"></script>
  <script>
    let ctx = document.getElementById('my-chart').getContext('2d');

    let myChart = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: @Html.Raw(Model.Labels),
        datasets: [{
          label: '# sold per category',
          data: @Html.Raw(Model.Data),
          backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(255, 159, 64, 0.2)'
          ],
          borderColor: [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          yAxes: [{
            ticks: {
              beginAtZero: true
            }
          }]
        }
      }
    });
  </script>
}
